name: PACE Infrastructure Pipeline

on:
  push:
    branches:
      - master
      - dev
      - feature/*
      - upstream/*

defaults:
  run:
    shell: bash
    working-directory: ./infra-scripts

env:
  DOJO_PATH: ${{ github.workspace }}
  DATA_PATH: ${{ vars.DATA_PATH }}

  DOJO_HOST: ${{ vars.DOJO_HOST }}
  VIRTUAL_HOST: ${{ vars.DOJO_HOST }}
  LETSENCRYPT_HOST: ${{ vars.DOJO_HOST }}

  CTF_NAME: ${{ vars.CTF_NAME }}
  CTF_DESC: ""

jobs:
  # quick deploy dev
  refresh-dev:
    runs-on: [self-hosted, dev-runner]
    if: |
      !startsWith(github.event.head_commit.message, 'DEPLOY:') &&
      ((startsWith(github.ref, 'refs/heads/feature/') ||
      startsWith(github.ref, 'refs/heads/upstream/')) &&
      github.actor == vars.DEV1_SERVER_USER)
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      
      - name: Quick Deploy
        run: docker exec dojo dojo sync
    
  # quick deploy dev2
  refresh-dev2:
    runs-on: [self-hosted, dev2-runner]
    if: |
      !startsWith(github.event.head_commit.message, 'DEPLOY:') &&
      ((startsWith(github.ref, 'refs/heads/feature/') ||
      startsWith(github.ref, 'refs/heads/upstream/')) &&
      github.actor == vars.DEV2_SERVER_USER)
    environment: dev2
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      
      - name: Quick Deploy
        run: docker exec dojo dojo sync

  # Build Docker container
  build-dev:
    runs-on: [self-hosted, dev-runner]
    if: |
      startsWith(github.event.head_commit.message, 'DEPLOY:') &&
      ((startsWith(github.ref, 'refs/heads/feature/') ||
      startsWith(github.ref, 'refs/heads/upstream/')) &&
      github.actor == vars.DEV1_SERVER_USER)
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      
      - name: Build Docker Image
        run: ./infra-build.sh

  build-dev2:
    runs-on: [self-hosted, dev2-runner]
    if: |
      startsWith(github.event.head_commit.message, 'DEPLOY:') &&
      ((startsWith(github.ref, 'refs/heads/feature/') ||
      startsWith(github.ref, 'refs/heads/upstream/')) &&
      github.actor == vars.DEV2_SERVER_USER)
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      
      - name: Build Docker Image
        run: ./infra-build.sh

  build-staging:
    runs-on: [self-hosted, staging-runner]
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      
      - name: Build Docker Image
        run: ./infra-build.sh

  build-testing:
    runs-on: [self-hosted, testing-runner]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      
      - name: Build Docker Image
        run: ./infra-build.sh
      
  build-prod:
    needs: deploy-testing
    runs-on: [self-hosted, prod-runner]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      
      - name: Build Docker Image
        run: ./infra-build.sh

  # Deploy to Dev (feature/* and upstream/* branches)
  deploy-dev:
    needs: build-dev
    if: |
      startsWith(github.event.head_commit.message, 'DEPLOY:') &&
      ((startsWith(github.ref, 'refs/heads/feature/') ||
      startsWith(github.ref, 'refs/heads/upstream/')) &&
      github.actor == vars.DEV1_SERVER_USER)
    runs-on: [self-hosted, dev-runner]
    environment: dev
    steps:
      - name: Stop and Remove Existing Container
        run: ./infra-down.sh
      
      - name: Run Docker Container
        run: ./infra-up.sh
        
  # Deploy to dev2 environment (feature/* and upstream/* branches)
  deploy-dev2:
    needs: build-dev2
    if: |
      startsWith(github.event.head_commit.message, 'DEPLOY:') &&
      ((startsWith(github.ref, 'refs/heads/feature/') ||
      startsWith(github.ref, 'refs/heads/upstream/')) &&
      github.actor == vars.DEV2_SERVER_USER)
    runs-on: [self-hosted, dev2-runner]
    environment: dev2
    steps:
      - name: Stop and Remove Existing Container
        run: ./infra-down.sh
      
      - name: Run Docker Container
        run: ./infra-up.sh

  # Deploy to Staging (dev branch)
  deploy-staging:
    needs: build-staging
    if: github.ref == 'refs/heads/dev'
    runs-on: [self-hosted, staging-runner]
    environment: staging
    steps:
      - name: Stop and Remove Existing Container
        run: ./infra-down.sh
      
      - name: Run Docker Container
        run: ./infra-up.sh
      
  # Deploy to Testing (master branch)
  deploy-testing:
    needs: build-testing
    if: github.ref == 'refs/heads/master'
    runs-on: [self-hosted, testing-runner]
    environment: testing
    steps:
      - name: Stop and Remove Existing Container
        run: ./infra-down.sh
      
      - name: Run Docker Container
        run: ./infra-up.sh
    
  # Deploy to Production (master branch)
  deploy-prod:
    needs: build-prod
    if: github.ref == 'refs/heads/master'
    runs-on: [self-hosted, prod-runner]
    environment: production
    steps:
      - name: Stop and Remove Existing Container
        run: ./infra-down.sh
      
      - name: Run Docker Container
        run: ./infra-up.sh
